name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
env:
  NUMBER_WEBAPP_NAME: Number-app-service-darrendoyleslotapp
  NUMBER_WEBAPP_PACKAGE_PATH: 'D:\a\SlotMachineApplication\SlotMachineApplication\code\BonusNumber'    
  NUMBER_WORKING_DIRECTORY: ./code/BonusNumber
  
  ANIMALS_WEBAPP_NAME: Animals-app-service-darrendoyleslotapp
  ANIMALS_WEBAPP_PACKAGE_PATH: 'D:\a\SlotMachineApplication\SlotMachineApplication\code\RandomAnimals'   
  ANIMALS_WORKING_DIRECTORY: ./code/RandomAnimals
  
  MERGE_WEBAPP_NAME: Merge-app-service-darrendoyleslotapp
  MERGE_WEBAPP_PACKAGE_PATH: 'D:\a\SlotMachineApplication\SlotMachineApplication\code\Merge'  
  MERGE_WORKING_DIRECTORY: ./code/Merge  
  
  FRONTEND_WEBAPP_NAME: Frontend-app-service-darrendoyleslotapp
  FRONTEND_WEBAPP_PACKAGE_PATH: 'D:\a\SlotMachineApplication\SlotMachineApplication\code\Frontend'
  FRONTEND_WORKING_DIRECTORY: ./code/Frontend
  
  DOTNET_VERSION: '5.0.x'
  CONFIGURATION: Release

jobs:
  numbers-build-and-deploy:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ env.NUMBER_WORKING_DIRECTORY }} 
    steps:

      # Checkout the repo
      - uses: actions/checkout@main
        
     
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
          
      - name: where are we
        run: pwd
        
     # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration ${{ env.CONFIGURATION }}
          dotnet publish -c Release -o '${{ env.NUMBER_WEBAPP_PACKAGE_PATH }}/myapp'
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.NUMBER_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.NUMBER_APP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.NUMBER_WEBAPP_PACKAGE_PATH }}/myapp' 

  animals-build-and-deploy:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ env.ANIMALS_WORKING_DIRECTORY }}
    steps:

      # Checkout the repo
      - uses: actions/checkout@main
        
     
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
          
      - name: where are we
        run: pwd
        
     # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration ${{ env.CONFIGURATION }}
          dotnet publish -c Release -o '${{ env.ANIMALS_WEBAPP_PACKAGE_PATH }}/myapp'
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.ANIMALS_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.ANIMAL_APP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.ANIMALS_WEBAPP_PACKAGE_PATH }}/myapp' 
    
  merge-build-and-deploy:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ env.MERGE_WORKING_DIRECTORY }}
    steps:

      # Checkout the repo
      - uses: actions/checkout@main
        
     
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
          
      - name: where are we
        run: pwd
        
     # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration ${{ env.CONFIGURATION }}
          dotnet publish -c Release -o '${{ env.MERGE_WEBAPP_PACKAGE_PATH }}/myapp'
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.MERGE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.MERGE_APP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.MERGE_WEBAPP_PACKAGE_PATH }}/myapp' 
          
  frontend-build-and-deploy:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_WORKING_DIRECTORY }}
    steps:

      # Checkout the repo
      - uses: actions/checkout@main
        
     
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
          
      - name: where are we
        run: pwd
        
     # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.FRONTEND_WEBAPP_PACKAGE_PATH }}/myapp'
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.FRONTEND_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.FRONTEND_APP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.FRONTEND_WEBAPP_PACKAGE_PATH }}/myapp' 
          
